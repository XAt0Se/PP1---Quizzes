#include<stdio.h>


int main() {
	//--------------------------Week-1_Simple-Quiz----------------------------------//

	//1. answer: 6
	/*
	printf("%d", printf(""1 2 3\n));
	*/

	//2. answer:1.254
	/*
	double x = 1.2543;
	printf("%.3lf", x);
	*/

	//3. answer: 12	
	/*
	printf("%d", sizeof(7/3) + sizeof(5.0/2));
	*/

	//4. answer:4
	/*
	printf("%d", printf("Hi!\n"));
	*/

	//5. answer: 7
	/*
	int a = 3. b = 11;
	int res = b/a + b%a + (a<b) + (a!=b);
	printf("%d", res)
	*/

	//6. answer: 3.77
	/*
	double x = 3.7657;
	printf("%.2lf", x);
	*/

	//7. answer: 3
	/*
	int a = 7, b = 16;
	int res = (a>b) + (b/2 > a) + (b/a);
	printf("%d", res);
	*/

	//8. answer: 15
	/*
	printf("%d", printf("I am a student\n"));
	*/

	//9. answer: 14
	/*
	int a = 25;
	printf("%d", sizeof(long long) + sizeof(a) + sizeof(short int));
	*/

	//10. answer: 2
	/*
	int a = 10, b = 5;
	int res = (a<b) + (a!=b) + (a>b);
	printf("%d", res);
	*/

	//11. answer: 9
	/*
	int a = 7, b=13;
	int res = b/a + b%a + (a!=b) + (a>b/2);
	printf("%d", res);
	*/

	//12. answer: -2
	/*
	int a = 8, b = 3, c = 5;
	int res = a++ - --b - ++c;
	printf("%d", res - b);
	*/

	//13. asnwer: 64
	/*
	long long a= 2;
	printf("%d", sizeof(double) * sizeof(a));
	*/

	//14. answer: 9
	/*
	int a = 17, b = 6;
	int res = (a>b) + (b%a) + (a/b);
	printf("%d", res);
	*/

	//15. answer: 
	/*
	int a = 17, b = 6;
	int res = a/b*b;
	printf("%d", res);
	*/

	//16. answer: 9
	/*
	int a = 3, b = 3;
	int res = a++ + --b;
	printf("%d", a + res);
	*/

	//17. answer:3
	/*
	int a, b, c;
	int i = scanf("%d %d %d", &a, &b, &c);
	printf("%d", i);
	*/

	//18. answer: 21
	/*
	int a = 5, b = 8;
	int res = ++a + b--;
	printf("%d", b+ res);
	*/

	//19. answer: 16
	/*
	short int a = 25;
	pritnf("%d", sizeof(double) * sizeof(a));
	*/

	//20. answer: 6
	/*
	short int a = 25;
	printf("%d", sizeof(float) + sizeof(a));
	*/

	//21. answer: 20
	/*
	printf("%d", sizeof(100)+sizeof(100LL) + sizeof(100.0));
	*/


	//--------------------------Week-2_Simple-Quiz----------------------------------//

	//1. answer:3
	/*
	int a = 5, b = 7, res;
	res = (a > b/2) + (a/2 < b) + (++a == --b);
	printf("%d", res);
	*/

	//2. answer: 8
	/*
	int a = 7;
	if(++a > 7 || ++a > 6 || a++ > 2)
		printf("YES");
	else
	printf("NO");
	printf("%d", a);
	*/

	//3. answer: 7
	/*
	int x = 2;
	swithc(x){
	case 5: x = x+3;
	default: x = x + 5;
	}
	printf("%d", x);
	*/

	//4. answer: 11
	/*
	int x = 4;
	switch(x){
	case 4: x = x+2;
	default: x=x+5;
	}
	printf("%d", x);
	*/

	//5. answer: 11
	/*
	int a = 3, b = 7;
	if(a != b || a == b)
		prinf("%d", a + b+1);
	else
	  printf("%d", a*b);
	*/

	//6. answer: 7
	/*
	int x = 5;
	switch(x){
	case 4: x = x + 1;
	break;
	case 5: x = x + 1;
	case 6: x = x + 1;
	break;
	case 7: x = x + 1;
	break;
	}
	printf("%d", x);
	*/

	//7. answer: 2
	/*
	int a = 9, b = 10;
	if(a++ != --b) a++; else --b;
	printf("%d", a - b);
	*/

	//8. answer: -2
	/*
	int a = 3, b = 4, res;
	res =  (a++ < --b) ? a + b : a - b;
	printf("%d", res - b);
	*/

	//9. answer: 16
	/*
	int a = 7, b = 6;
	if(a++ == ++b) ++a; else b--;
	printf("%d", a + b);
	*/

	//10. answer: 2
	/*
	int a = 7, b = 3, res;
	res = (a > b) + (a/2 > b) + (a != ++b);
	printf("%d", res);
	*/

	//11. answer: 6
	/*
	int a = 5;
	if(a++ > 5 && a++ > 6 && ++a > 7)
	printf("YES");
	else
	printf("NO");
	printf("%d", a);
	*/

	//12. answer: 565
	/*
	int x = 5;

	switch (x)

	{

	case 5: printf("%d", x);

	case 7: printf("%d", x + 1); break;

	default: printf("%d", x + 2); break;

	}

	printf("%d\n",x);
	*/

	//13. answer: 3
	/*
	int x = 0;

	switch (x)

	{

	case 1: x = x + 3;

	case 0: x = x + 2;

	case 2: x = x + 1;

	)

	printf("d\n",x);
	*/

	//14. answer: 7
	/*
	int a = 5;

	if (a++ > 0 && a++ > 10 && a++ > 0) printf("YES\n");
	else printf("NO\n");
	printf("%d\n", a);
	*/

	//15. answer:20
	/*
	int x = 0;

	switch (x){

	case 1: printf("%d", x); break;
	case 2: printf("%d", x + 1); break;
	default: printf("%d", x + 2); break;

	printf("%d\n",x);
	*/

	//16. answer: 673
	/*
	int x = 3;

	switch (x){

	case 1: printf("%d", x + 1);
	case 2: printf("%d", x + 2);
	case 3: printf("%d", x + 3);
	default: printf("%d", x + 4);

	printf("%d\n",x);
	*/

	//17. answer: 23
	/*
	switch (5/2){

	case 1: printf("1");

	case 2: printf("2");

	default: printf("3");
	*/

	//18. answer: 13
	/*
	int a = 4, b = 8;
	if(a != b) a++; else --b;
	printf("%d", a + b);
	*/

	//19. answer: 32
	/*
	int x = 2;

	switch (x){

	case 1: printf("%d", x);

	break;

	case 2: printf("%d", x + 1);

	break;

	default: printf("%d", x + 2); break;

	}

	printf("%d\n",x);
	*/

	//20. answer:3
	/*
	int a = 4, b = 8, res;
	res = (a == b/2) + (2*a != --b) + (a + 3 == b);
	printf("%d", res);
	*/

	//--------------------------Week-3_Simple-Quiz----------------------------------//

	//1. answer: 4
	/*
	int i  = 2, j = 10, cnt = 0;
	while(i++ < j--) cnt++;
	printf("%d", cnt);
	*/

	//2. answer: 6
	/*
	int cnt = 1;
	for(int i = 2; i< 8; i++){
	if(i>6) continue;
	cnt++;
	}
	printf("%d", cnt);
	*/

	//3. answer: 7
	/*
	 int cnt = 3;
	 for(int i = 9; i > 3; i--){
	 if(i % 3) cnt++;
	 printf("%d", cnt);
	 }
	*/

	//4. answer: 10
	/*
	int cnt = 1;
	for(int i = 2; i  <= 10; i += 3){cnt+=3;}
	printf("%d", cnt);
	*/

	//5. answer: 7
	/*
	int cnt = 1;
	for(int i =10; i > 2; i--){
	if(i<5) continue;
	cnt++;
	}
	printf("%d", cnt);
	*/

	//6. asnwer: 5
	/*
	int cnt = 2;
	for(int i = 10; i >0; i--){
	if(--i <  5)break;
	cnt++;
	}
	printf("%d", cnt);
	*/

	//7. asnwer:6
	/*
	int cn t= 2;
	for(int i = 6; i < 13; i++)
	   if(i %4>1) cnt++
	   printf("%d", cnt);
	*/

	//8. answer: 3
	/*
	int cnt = 0;
	for(int i =8; i>0; i--){
	if(i--<4) break;
	cnt++;
	}
	printf("%d", cnt);
	*/

	//9. asnwer:18
	/*
	int i = 7, cnt = 2;
	while(i>= 0){
	i--;
	cnt+=2;
	}
	printf("%d", cnt);
	*/

	//10. anwer: 6 defe hello
	/*
	int i = 12;
	for(;i;i-= 2)
	printf("Hello\n");
	*/

	//11. answer:6
	/*
	int i = 6, cnt = 0;
	while(i - cnt) cnt++;
	printf("%d", cnt);
	*/

	//12. answer: 3
	/*
	int i  = 1, j = 7, cnt = 0;
	while(i < j ){
	i++; j--;
	cnt++;
	}
	printf("%d", cnt);
	*/

	//13. answer: 16
	/*
	int i  = 2, cnt = 0;
	while(i < 10){
	i ++;
	cnt+=2;

	}
	printf("%d", cnt);
	*/

	//14. anwer:5
	/*
	int i = 5, cnt = 0;
	while(i--){
	cnt++;
	}
	printf("%d", cnt);
	*/

	//15. answer: 11
	/*
	int cnt = 6;
	for(int i = 7; i <=15; i++)
		if(i%4>1) cnt++;
	printf("%d", cnt);
	*/

	//16. answer: 25
	/*
	int cnt = 0;
	for(int i = 0; i < 5; i++)
	for(int j = 0; j < 5; j++)
		cnt++;
	printf("%d", cnt);
	*/

	//17. answer: 10
	/*
	int i = 10;
	for(;i;i--)
	printf("Hello\n");
	*/

	//18. answer: 30
	/*
	int i = 10, cnt = 3;
	while(i>1){
	i--;
	cnt += 3;
	}
	printf("%d", cnt);
	*/

	//19. answer: 14
	/*
	int i = 2, cnt = 0;
	while(true){
	cnt+=2;i++;
	if(i>8) break;
	}
	printf("%d", cnt);
	*/

	//20. answer:11
	/*
	int cnt = 1;
	for(int i = 5; i <=9; i++) cnt+=2;
	printf("%d", cnt);
	*/

	//21. asnwer:6
	/*
	int cnt = 0;
	for(int i = 0; i < 5; i++) cnt += i++;
	printf("%d", cnt);
	*/

	//22. asnwer: 3
	/*
	int cnt = 0;
	for(int i = 2; i <= 10; i++){
	if(i++ > 6) break;
	cnt++;
	}

	printf("%d", cnt);
	*/

	//23. asnwer: 18
	/*
	int cnt = 4;
	for(int i = 7; i > 0; i--) cnt +=2;
	printf("%d", cnt);
	*/

	//24. answer: 9
	/*
	int cnt = 5;
	for(int i = 3; i < 7; i += 2)
	cnt += 2;
	printf("%d", cnt);
	*/

	//25. answer:19
	/*
	int cnt = 1;
	for(int i = 3; i <= 8; i++)
	cnt+=3;
	printf("%d", cnt)
	*/

	//--------------------------Week-4_Simple-Quiz----------------------------------//
	
	//1. answer: 13
	/*
	int a[5] = {5 ,2, 7, 1, 6};
	res = 0;
	for(i = 0; i < 4; i++)
		if(a[i] < a[i+1]) res+=a[i+1];
	printf("%d", res);
	*/

	//2. answer:14
	/*
	int a[5] = {1 ,2, 3, 4, 5};
	res = 2; i = 1;
	while(i < 4)
	res += a[++i];
	printf("%d", res);
	*/

	//3. answer: 45
	/*
	int a[3][3] = {{1, 2, 3}, {4, 5, 6), (7, 8, 9} };
	res = a[1][1] * a[2][2]; 
	printf("%d\n", res);
	*/

	//4. answer: 4
	/*
	short int a[16];

	res = sizeof(a) / sizeof(long long);

	printf("%d\n", res);
	*/

	//5. answer:24
	/*
	int a[3][3] {{1, 2, 3}, {4, 5, 6}, {7,8,9} };

	res = a[0][2] * a[2][1];

	printf("%d\n", res);
	*/


	//6. answer:13
	/*
	int a[3] [3] = {{1, 2, 3}, {4, 5, 6}, {7,8,9} };

	res = a[1][1] + a[2][1];

	printf("%d\n", res);
	*/

	//7. answer: 3
	/*
	int a[5] = {5, 2, 7, 1, 6); res = 0;

	for (i = 0; i < 4; i++)

	if (a[i] < a[i+1]) res += a[i]; 
	
	printf("%d\n", res);
	*/

	//8. answer: 3
	/*
	int a[6] = {6, 1, 5, 5, 2, 8};

	int res = 0;
	
	for (int i = 0; i < 5; i++) {
		if ((a[i] + a[i + 1]) % 2 == 0) res++;
	}
	printf("d\n", res);
	*/

	//9. answer:18
	/*
	int a[6] = {6, 1, 5, 5, 2, 8};

	int res = 0;

	for (int i = 0; i < 5; i++) {
		if ((a[i] <= a[i + 1])) res+= a[i+1];
	}
	printf("d\n", res);
	*/

	//10. answer:82
	/*
	long long a[10];
	res = sizeof(a) + sizeof(short int); 
	printf("%d\n", res);
	*/

	//11. answer: 3
	/*
	float a[6];
	res = sizeof(a)/sizeof(double);
	printf("%d", res);
	*/

	//12. answer: 6
	/*
	int a[5] = {1, 2, 3, 4, 5); 
	res = i = 0;

	while (i < 3) 
	res+=a[i++]; 
	printf("%d\n", res);
	*/

	//13. answer: 11
	/*
	int a[3] [3] = {{1, 2, 3}, {4, 5, 6}, {7,8,9} };

	res = a[0][1] + a[2][2]; 
	printf("%d\n", res);
	*/

	//14. answer: 10
	/*
	int a[6] = {7, 1, 8, 8, 1, 1};
	res = 0;
	for (i = 0; i < 5; i++)

	if ((a[i] + a[i+1]) % 2 == 0) res += a[i+1];
	printf("%d\n", res);
	*/

	//15. answer:11
	/*
	int a[6] = {4,1,7,3,5,10};
	res = 0;
	for (i = 0; i < 5; i++)

	if ((a[i] * a[i+1]) % 2) res += a[i];
	printf("%d\n", res);
	*/

	//16. answer: 8 
	/*
	int a[10]={1,2,3,4,5,6,7,8,9,10);

	res=a[2] + a[4];

	printf("%d\n", res);
	*/

	//17. answer: 9
	/*
	int a[10]={1,2,3,4,5,6,7,8,9,10);

	res=a[1] + a[6];

	printf("%d\n", res);
	*/

	//18. answer:404
	/*
	int a[100];
	res = sizeof(a) + sizeof(int);
	printf("%d", res);
	*/

	//19. answer:18
	/*
	int a[10]={1,2,3,4,5,6,7,8,9,10);

	res=a[1] * a[8];

	printf("%d\n", res);
	*/

	//20. answer:12
	/*
	int a[5] = {5, 2, 7, 1, 6};

	res = 0;
	for (i = 0; i < 4; i++)

	if (a[i] > a[i+1]) res += a[i]; 
	printf("%d\n", res);
	*/


	//--------------------------Week-11_Simple-Quiz----------------------------------//

	//1. answer: r
	// for "c" we calculate / take just the number that given, brifly 5th number (calculate from 0- first element)
/*
char m[] = "UniversityADA";
printf("%c", *(m+5));
*/

//2. answer: x = 4, y = 2 cvb: 4,2   
// just change value
/*
int x = 2, y = 4;
void f(int* a, int* b){
int temp = *b;
*b = *a;
*a = temp;
}
*/

//3. answer: 8 
//birinci biz d ve b ni p1 p2 ye veririk, sonra bir birinden cixilir b ve d int olduguna gore 4 e vurulur printf de char olduugna gore de 1 e bolunur
/*
int a = 2, b = 3, c = 4, d = 5;
int* p1, *p2;
p1 = &d;
p2 = &b;
printf("%d", (char*)p1 - (char*)p2);
*/

//4. answer: 1  
// burda ilk ptr inde x- mertebe 2 vahid azaldir, menasi ptr=ptr-2 ama sonraki ise hemin memory adresindeki vaueni 2 vahid azaldir
/*
int a = 2, b = 3, c = 4, d = 5;
int* ptr;
ptr = &d;
ptr -=2;
(*ptr) -=2;  // *ptr= *ptr-2
printf("%d", *ptr);
*/

// 5. answer: 4 
// ilk once indexi mertebeni 1 vahid qaldirdiq(PASS THE NEXT VALUE) b den geldi c ye, IKINCI PTR DA da c nin qiymetini 1 vahid qaldirdiq
/*
int a,b = 1, c = 2, d;
int* ptr;
ptr = &b;
*ptr++;
(*ptr)++;
printf("%d", b + c);
*/

//6. answer: 5
// 48 - 8 = 40 olur sonrada alinan valueni 40 i printf deki size a doublin size na boluruk olur 40/8=5
//  (M[48] ELE BIR BUNU 48 GOTURUK, O BIRINDE DE M+8 YENI 0+8 CUNKI M BURDA 0 CI ELEMTENDI)
/*
char m[100];
printf("%d", (double*)&m[48] - (double*)(m+8));  // buna bolursen yani double a
*/

//7. answer: 10
// m burda arrn 0 ci elementidi, ptr = m = 0 bizde 10 vahid artirirq olur 10 printf  de de 10 - 0= 10
/*
int m[100];
int* ptr;
ptr = m;
for(int i = 0; i < 10; i++) ptr++;
printf("%d", ptr - m);
*/

//8. answer: 2
// p1- p2=> &d - &b => 5-3 
/*
int a = 2, b = 3, c = 4, d = 5;
int* p1, *p2;
p1 = &d;
p2 = &b;
printf("%d", p1-p2);

*/

//9. answer:3
// &d - &a => 5 - 2 = 3
/*
double a = 2, b = 3, c = 4, d = 5;
printf("%d", &d - &a);
*/

//10. answer: 16
// burda qisa yol tapmaga her birin artma valusesini gel verilen valueye sonrada vur nece denedise ona:
//  x 1 vahid y 2 vahid artir gelirik 1 in usdune bunu 1 + 1 + 2 = 4 indi burda eger printf("", x+y+z) olsa idi 4 *3 olardi
// cunki hem x in qiymeti hem y hem de z in qiymeti 4 olur zincirleme kimi burdada y*z yeni 4*4 olur cabah 16 di 
/*
int x = 1, &y = x, &z = y;
x++;
y+=2;
printf("%d", z*y);
*/

//11. answer: -3
// bu ele &a - &d di hansiki sadece valueleri cixiriq yeni  2 - 5 = -3
/*
double a = 2, b = 3, c = 4, d = 5;
double* p;
p = &a;
printf("%d", p - &d);
*/

//12. answer: 7
// ilk once *ptr = *ptr - 2 yeni *ptr = &d - 2 => 3
// sonra (*ptr) = (*ptr) - 2 yeni (*ptr) = &d - 2 => 3 - 2= 1
// ama bizden ne isteyir baxaq b + c isdeyir bu da 3 + 4 du yeni cavah 7 di eger bizden *ptr isde se idi cavab 1 olardi 
// burda onsuz verilen ptr larda aparilan processler b ve c nin qiymetine tesir elemedi o sadece d ni deyisdi
/*
int a = 2, b = 3, c = 4, d = 5;
int* ptr;
ptr = &d;
*ptr -= 2;
(*ptr) -= 2;
printf("%d", b + c);
*/

//13. answer:10
// arrr in 0 ci elementinden basdayir yeni U dan ta ki NULL u gorene qeder X i artirir bu da strlen in duzsutudu eslinde
/*
char m[100] = "University";
char* p;
int x = 0;
for(p = m; *p; p++)x++;
printf("%d", x);
*/

//14. answer: -4 
// double di size i da 8 oldugundan cixib 8 e vururuq ve hemiseki kimi de int* verib oun size na bolluk
// 2 - 4 = -2 , -2*8/4 = -4
/*
double a = 2, b = 3, c = 4, d = 5;
int* p1, *p2;
p1 = &a;
p2 = &c;
printf("%d", (int*)p1 - (int*)p2);

*/

//15. answer: 15 
// 4*30/8 = 15 
// yene eyni gedir  m  0 ci elementdi ptr = 10 buna gore de sonra da 10 u 20 vahid artiririq olur 30 
// gelirik printf de ikinci hisseye burda m 0 di dedik ora 0 a getdi
// 30 u veururuq int in size na yeni 4*30 sonrada bouruk double in size na 4*30/8 = 15

/*
int i, m[100];
int* ptr;
ptr = m + 10;
for(int i = 10; i < 30; i++) ptr++;
printf("%d", (double*)ptr - (double*)m);
*/

//16. answer: 21  
// 7 + 7 + 7 burda zincirleme tesir hammisina tesir edir artim eyni zamanda 3 vahid artir heresi
// ZINCIRLEME BAS VERIRI BUNA OXSAR SUALDA IZAH ELEMISEM
/*
int i = 4, &j=i, &k=j;
i++; j++; k++;
printf("%d", i + j + k);
*/

//17. answer:4
// arrr in 6 ci elementinden basdayir yeni U dan ta ki NULL u gorene qeder X i artirir bu da strlen(M+6) in duzsutudu eslinde
/*
char m[100] = "University";
char* p;
int x = 0;
for(p = m + 6; *p; p++)x++;
printf("%d", x);
*/

//18. answer:i
// for "c" we calculate / take just the number that given, brifly 2th number (calculate from 0- first element)
/*
char m[] = "UniversityADA";
printf("%c", *(m+2));
*/

//19. answer:25
// m 0 dir, ptr 15 di, 15 i 10 vahid artirirq olur 25, printf de de 25 - 0 yaziriq olur 25
/*
int i, m[100];
int* ptr;
ptr = m + 15;
for(int i = 10; i < 20; i++) ptr++;
printf("%d", ptr - m);
*/

//20. answer: 5 
// cunki d ni goturur indexin azaldir fso
// mertebe olaraq azalir qisaca sira ile c ve b
/*
int a = 1, b = 5, c = 3, d = 4;
int* ptr;
ptr = &d;
for(int i = 0; i < 2; i++) ptr--;
printf("%d", *ptr);
*/

//------------NOTE-------------//

//*ptr++  => pass to the next variable
// ptr++  => pass to the next variable
//(*ptr)++  => increase value
//*ptr-=2   => decrease value

//-------------------------------//



//--------------------------Week-12_Simple-Quiz----------------------------------//


//1. answer: 112

/*
struct MY{
char s[100];
int x,y,z;
};
printf("%d", sizeof(MY));
*/

//2. answer: A

/*
Which of yhe following is a properly defined struct?

A) struct a_struct {int a;};
B) struct {int a;}
C) struct a_struct {int a;}
D) struct a_struct int a;
*/

//3. answer: 8

/*
union test{
long long x;
char arr[6];
int y;
};
printf("%d", sizeof(test));
*/

//4. answer: 16

/*
union test{
double x;
char arr[16];
short int y;
};
printf("%d", sizeof(test));
*/

//5. answer: 4

/*
struct point {
int x,y,z;
};
struct point p = {1, 2, 3};
printf("%d", p.x + p.z);
*/

//6. answer: 10

/*
struct point{
int x, y;
}a;

a.x = 4; a.y = 6;
printf("%d", a.x + a.y);
*/

//7. answer: 24

/*
struct Point{
int x, y;
};

struct Point *p = (struct Point*)calloc(10, sizeof(Point));
printf("%d", (char*)&p[5] - (char*)&p[2]);
*/

//8. answer: A

/*
Which of the following accesses a variable in strucure *b?

A) b->var
B) b.var
C) b-var
D) b>var

*/

//9. answer: A

/*
Which properly declares a variable of struct foo?

A) struct foo var;
B) struct foo;
C) foo;
D) int foo;

*/

//10. answer: -40

/*
struct Point{
int x, y;
};

struct Point *p = (struct Point*)calloc(10, sizeof(Point));
struct Pointer *q = p+2, *w = p+7;
printf("%d", (char*)q - (char*)w);
*/

//11. answer: 46

/*
struct MY{
char name[10];
char surname[20];
long long x, y;
};

printf("%d", sizeof(MY));

*/

//12. answer: A

/*
--Consider the following struct. Which is the correct option to chanfe the ranging variable to 45?--

struct video{
char name[50];
int ranking;
};

struct video cats = {"CatVid", 53};
struct video *ptr = &cats;

A) ptr-> renking = 45;
B) ptr.ranking = 45;
C) ranking -> ptr = 45;
D) ptr = 45;

*/

//13. answer: -24

/*
struct Point{
int x, y;
};

struct Point *p = (struct Point*)calloc(10, sizeof(Point));
struct Pointer *q = p+2, *w = p+5;
printf("%d", q - w);
*/


//14. answer: B

/*
Which of the following accesses a variable in structure b?

A) b.var
B) b->var
C) b-var
D) b>var

*/

//15. answer:D

/*
struct node
{
int i;

float j;
};
struct node *s[10];

The above declaration define 's' to be

A) An array, each element of which is a pointer to a structure of type node

B) A structure of 2 fields, each field being a pointer to an array of 10 elements

C) A structure of 3 fields: an integer, a float, and an array of 10 elements

D) An array, each element of which is a structure of type node.
*/


}










#pragma region Graded Quiz 1

/*1. int cnt = 2;
for (int i = 2; i < 10; i++) {
	cnt++;
	if (i > 7) break;
}
printf("%d\n", cnt); 9 */

/*2. int cnt = 1;
for (int i = 35; i > 7; i--) {
	switch (i)
	{
	case 15:
		cnt += 15;
		break;

	case 10:
		cnt += 10;
		break;

	case 7:
		cnt += 7;
	}
}

printf("%d\n", cnt); 26 */

/*3. int cnt = 0;
for (int i = 10; i > 0; i--) {
	cnt++;
	i -= 2;
}
printf("%d\n", cnt); 4 */

/*4. int cnt = 4;
for (int i = 10; i >= 2; i--) {
	if (i % 3 > 1) cnt++;
}
printf("%d\n", cnt); 7 */

/*5. int i = 17;
for (; i; i--) {
printf("Hello\n"); 17
} */

/*6. int a = 7, b = 2;
int res = ++a + ++b;
printf("%d\n", res + a); 19 */

/*7. int a = 3, b = 8;
int res = (a % 2) + (a % b) + (b % a);
printf("%d\n", res); 6 */

/*8. int a = 6, b = 13;
int res = b / a + b % a + (a < b) + (a > b);
printf("%d\n", res); 4 */

/*9. double x = 4.3757;
printf("%.3lf\n", x); 4.376*/

/*10. printf("%.d\n", printf("ADA University\n")); 15 */

/*12. float a[10];
int res = sizeof(a) / sizeof(long long);
printf("%.d\n", res); 5 */

/*13. int a[6] = { 5,2,7,1,6,2 };
int res = 0;
for (int i = 1; i < 5; i++) {
	if (a[i] > a[i - 1]) res += a[i];
}
printf("%.d\n", res); 13 */

/*15. double a[10];
int res = sizeof(a) / sizeof(int);
printf("%.d\n", res);
return 0; 20 */

/*16. int a = 4, b = 9, res;
res = (++a > --b - 4) ? a++ : --b;
printf("%.d\n", res - a); - 1 */

/*17. int a = 8;
if (a++ > 7 || ++a >= 5 || a++ > 2) {
	printf("YES\n");
}
else {
	printf("NO\n");
}
printf("%.d\n", a); YES and 9 */

/*18. int a = 11, b = 7, res;
if (a % 3 > b % 3) {
	res = ++a * --b;
}
else {
	res = --a / ++b;
}
printf("%.d\n", res); 72 */

/*19. int x = 7;
switch (x) {
case 7: x--;
case 4: x--;
default: x--;
}

printf("%.d\n", --x); 3 */

/*20. int x = 10;
switch (x) {
case 7: x--;
case 4: x--;
default: x--;
}

printf("%.d\n", --x); 8 */

#pragma endregion
//}

#pragma region Graded Quiz 2

//1. int a = 2, c = 3;
//
//int f(int a, int b) {
//	return a + b + c;
//}
//
//int main()
//{
//	printf("%d\n", f(1, 2));
//} 6 


//2. int f(int x) {
//	if (x == 1) return x + 1;
//	return f(x - 1) * 3;
//}
//
//int main()
//{
//	printf("%d\n", f(3));
//} 18


//3. int f(int n) {
//	while (n > 99) n /= 10;
//	return n;
//}
//
//int main()
//{
//	printf("%d\n", f(1234));
//} 12 

//4. int x = 1, y = 1;
//
//void f(int x) {
//	x++; y++;
//}
//
//int main() {
//	f(5);
//	printf("%d\n", x + y);
//} 3

//5. int f(int a, int b) {
//	if (a == 2) return b++;
//	return f(a - 1, b) + 3;
//}
//
//int main()
//{
//	printf("%d\n", f(4, 10));
//} 16

//int f(int x) {
//
//	if (x == 0) return 0;
//	return f(x - 1) * 532;
//}
//int main() {
//	int x = 123456;
//	f(x);
//	printf("%d\n", f(x));
//}

//7. int f(int x) {
//	if (x == 1) return x + 1;
//	return f(x - 2) + 5;
//}
//
//int main()
//{
//	printf("%d\n", f(9));
//} 22 

//8. int f(int a, int b) {
//	if (a == 0) return 1;
//	return f(a - 1, b) * 3;
//}
//
//int main()
//{
//	printf("%d\n", f(2, 3));
//} 9

//9. int f(int a, int b) {
//	if (a == 0) return b;
//	if (b == 0) return a;
//	return f(a - 1, b - 2);
//}
//
//int main()
//{
//	printf("%d\n", f(10, 10));
//} 5

//10. int f(int n) {
//	int cnt = 0;
//	while (n > 0) {
//		cnt++;
//		n /= 10;
//	}
//	return cnt;
//}
//
//int main()
//{
//	printf("%d\n", f(1234));
//} 4


//11. int main()
//{
//	char a[] = "Crocodile";
//	a[5] = '0';
//	printf("%d\n", strlen(a + 2));
//} 7


//12. int main()
//{
//	char a[] = "ADA Uni";
//	printf("%d\n", strlen(a + 3));
//} 4

//13. int main()
//{
//	char s[100] = "home";
//	char t[100] = "student";
//	strcat(s + 2, t + 4);
//	puts(s);
//} homeent

//14. int main()
//{
//	char s[100] = "table";
//	char t[100] = "chair";
//	strncat(s + 2, t + 3, 2);
//	puts(s);
//} tableir


//15. int main()
//{
//	char s[100] = "cat";
//	char t[100] = "student";
//	strncat(s + 1, t + 3, 2);
//	puts(s);
//} catde

//16. int main()
//{
//	printf("%d\n", strncmp("camp", "can", 3));
//} -1

//17. int main()
//{
//	char a[50];
//	int res = sizeof(a) * sizeof(int);
//	printf("%d\n", res);
//} 200

//18. int main()
//{
//	char s[100] = "cool";
//	char t[100] = "weather";
//	strcat(s + 1, t + 4);
//	puts(s);
//} coolher

//19. int main()
//{
//	char a[100];
//	scanf("%s", a); // amazonka;
//	scanf("%s", a); // site;
//	printf("%d\n", strlen(a + 2) * strlen(a + 5));
//} 6

//20. int main()
//{
//	printf("%d\n", strcmp("camp", "cam"));
//} 1

#pragma endregion
